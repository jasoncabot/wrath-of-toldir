// automatically generated by the FlatBuffers compiler, do not modify

import { DamageComponent } from '../../wrath-of-toldir/items/damage-component';
import { DurabilityComponent } from '../../wrath-of-toldir/items/durability-component';
import { QualityComponent } from '../../wrath-of-toldir/items/quality-component';


export enum Component{
  NONE = 0,
  DamageComponent = 1,
  QualityComponent = 2,
  DurabilityComponent = 3
}

export function unionToComponent(
  type: Component,
  accessor: (obj:DamageComponent|DurabilityComponent|QualityComponent) => DamageComponent|DurabilityComponent|QualityComponent|null
): DamageComponent|DurabilityComponent|QualityComponent|null {
  switch(Component[type]) {
    case 'NONE': return null; 
    case 'DamageComponent': return accessor(new DamageComponent())! as DamageComponent;
    case 'QualityComponent': return accessor(new QualityComponent())! as QualityComponent;
    case 'DurabilityComponent': return accessor(new DurabilityComponent())! as DurabilityComponent;
    default: return null;
  }
}

export function unionListToComponent(
  type: Component, 
  accessor: (index: number, obj:DamageComponent|DurabilityComponent|QualityComponent) => DamageComponent|DurabilityComponent|QualityComponent|null, 
  index: number
): DamageComponent|DurabilityComponent|QualityComponent|null {
  switch(Component[type]) {
    case 'NONE': return null; 
    case 'DamageComponent': return accessor(index, new DamageComponent())! as DamageComponent;
    case 'QualityComponent': return accessor(index, new QualityComponent())! as QualityComponent;
    case 'DurabilityComponent': return accessor(index, new DurabilityComponent())! as DurabilityComponent;
    default: return null;
  }
}

