// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class DamageComponent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):DamageComponent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDamageComponent(bb:flatbuffers.ByteBuffer, obj?:DamageComponent):DamageComponent {
  return (obj || new DamageComponent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDamageComponent(bb:flatbuffers.ByteBuffer, obj?:DamageComponent):DamageComponent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DamageComponent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

min():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

max():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startDamageComponent(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMin(builder:flatbuffers.Builder, min:number) {
  builder.addFieldInt8(0, min, 0);
}

static addMax(builder:flatbuffers.Builder, max:number) {
  builder.addFieldInt8(1, max, 0);
}

static endDamageComponent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDamageComponent(builder:flatbuffers.Builder, min:number, max:number):flatbuffers.Offset {
  DamageComponent.startDamageComponent(builder);
  DamageComponent.addMin(builder, min);
  DamageComponent.addMax(builder, max);
  return DamageComponent.endDamageComponent(builder);
}
}
